"use strict";

const months = [
  "January",
  "February",
  "March",
  "April",
  "May",
  "June",
  "July",
  "August",
  "September",
  "October",
  "November",
  "December",
];

const form = document.querySelector(".form");
const containerWorkouts = document.querySelector(".workouts");
const inputType = document.querySelector(".form__input--type");
const inputDistance = document.querySelector(".form__input--distance");
const inputDuration = document.querySelector(".form__input--duration");
const inputCadence = document.querySelector(".form__input--cadence");
const inputElevation = document.querySelector(".form__input--elevation");

//? to fix issue in the "event submitting" with "map", we need to make it global
//? the same for mapEvent
let map;
let mapEvent;

//# Implementing geo-location API
//? accepts 2 parameters: success and error functions
if (navigator.geolocation) {
  navigator.geolocation.getCurrentPosition(
    function (parameter) {
      // success
      const { latitude } = parameter.coords;
      const { longitude } = parameter.coords;
      console.log(
        `https://www.google.com/maps/@${latitude},${longitude},15.5z?entry=ttu`
      );

      //# Implementing Leaflet library
      const coords = [latitude, longitude];
      //? 2nd param in "setView" is the zoom, "map" is special object generated by Leaflet
      map = L.map("map").setView(coords, 13);
      // console.log(map);

      L.tileLayer("https://tile.openstreetmap.org/{z}/{x}/{y}.png", {
        attribution:
          '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
      }).addTo(map);

      //? event handler for pointing on the map, ".on()" comes from Leaflet
      //? mapE = event, handling clicks on the map
      map.on("click", function (mapE) {
        mapEvent = mapE;
        form.classList.remove("hidden");
        inputDistance.focus();
      });
    },
    function () {
      // error
      alert(`Could not get the current location üó∫Ô∏è`);
    }
  );
}

//# Clear input fields function
const clearInputs = function () {
  inputDistance.value = "";
  inputDuration.value = "";
  inputCadence.value = "";
  inputElevation.value = "";
};

//# event for submitting
form.addEventListener("submit", function (e) {
  e.preventDefault();

  //* Clear input fields
  clearInputs();

  //* Display marker
  // console.log(mapEvent);
  const { lat, lng } = mapEvent.latlng;

  //? ".marker" creates; ".addTo" adds to the map; ".bindPopup" creates&binds a popup to the ".marker";
  L.marker([lat, lng])
    .addTo(map)
    .bindPopup(
      L.popup({
        maxWidth: 250,
        minWidth: 100,
        autoClose: false,
        closeOnClick: false,
        className: "running-popup",
      })
    )
    .setPopupContent(`Workout`)
    .openPopup();
});

//# event for change in option choice
inputType.addEventListener("change", function () {
  inputElevation.closest(".form__row").classList.toggle("form__row--hidden");
  inputCadence.closest(".form__row").classList.toggle("form__row--hidden");
});
